% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/steps-install.R
\name{step_install_pkg}
\alias{step_install_pkg}
\alias{step_install_deps}
\alias{step_install_cran}
\alias{step_install_github}
\title{Step: Install packages}
\usage{
step_install_deps(
  repos = repo_default(),
  type = getOption("pkgType"),
  dependencies = TRUE
)

step_install_cran(
  package = NULL,
  ...,
  repos = repo_default(),
  type = getOption("pkgType")
)

step_install_github(repo = NULL, ..., type = getOption("pkgType"))
}
\arguments{
\item{repos}{CRAN-like repositories to install from, defaults to
\code{\link[=repo_default]{repo_default()}}.}

\item{type}{Passed on to \code{\link[=install.packages]{install.packages()}}. The default avoids
installation from source on Windows and macOS by passing
\code{\link{.Platform}$pkgType}.}

\item{dependencies}{Which dependencies do you want to check?
Can be a character vector (selecting from "Depends", "Imports",
"LinkingTo", "Suggests", or "Enhances"), or a logical vector.

\code{TRUE} is shorthand for "Depends", "Imports", "LinkingTo" and
"Suggests". \code{NA} is shorthand for "Depends", "Imports" and "LinkingTo"
and is the default. \code{FALSE} is shorthand for no dependencies (i.e.
just check this package, not its dependencies).}

\item{package}{Package(s) to install}

\item{...}{Passed on to \code{install.packages()} or \code{remotes::install_github()}.}

\item{repo}{Package to install in the "user/repo" format.}
}
\description{
These steps are useful if your CI run needs additional packages.
Usually they are declared as dependencies in your \code{DESCRIPTION},
but it is also possible to install dependencies manually.
By default, binary versions of packages are installed if possible,
even if the CRAN version is ahead.

A \code{step_install_deps()} step installs all package dependencies declared in
\code{DESCRIPTION}, using \code{\link[remotes:install_deps]{remotes::install_deps()}}.
This includes upgrading outdated packages.

This step can only be used if a DESCRIPTION file is present in the repository
root.

A \code{step_install_cran()} step installs one package from CRAN via
\code{\link[=install.packages]{install.packages()}}, but only if it's not already installed.

A \code{step_install_github()} step installs one or more packages from GitHub
via \code{\link[remotes:install_github]{remotes::install_github()}}, the packages are only installed if their
GitHub version is different from the locally installed version.
}
\examples{
dsl_init()

get_stage("install") \%>\%
  add_step(step_install_deps())

dsl_get()
dsl_init()

get_stage("install") \%>\%
  add_step(step_install_cran("magick"))

dsl_get()
dsl_init()

get_stage("install") \%>\%
  add_step(step_install_github("rstudio/gt"))

dsl_get()
}
\seealso{
Other steps: 
\code{\link{step_add_to_drat}()},
\code{\link{step_add_to_known_hosts}()},
\code{\link{step_build_pkgdown}()},
\code{\link{step_do_push_deploy}()},
\code{\link{step_hello_world}()},
\code{\link{step_install_ssh_keys}()},
\code{\link{step_push_deploy}()},
\code{\link{step_run_code}()},
\code{\link{step_session_info}()},
\code{\link{step_setup_push_deploy}()},
\code{\link{step_setup_ssh}()},
\code{\link{step_test_ssh}()},
\code{\link{step_write_text_file}()}
}
\concept{steps}
