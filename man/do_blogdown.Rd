% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/macro-blogdown.R
\name{do_blogdown}
\alias{do_blogdown}
\title{Build a blogdown site}
\usage{
do_blogdown(
  ...,
  deploy = NULL,
  orphan = FALSE,
  checkout = TRUE,
  repos = repo_default(),
  path = "public",
  branch = "gh-pages",
  remote_url = NULL,
  commit_message = NULL,
  commit_paths = ".",
  force = FALSE,
  private_key_name = "TIC_DEPLOY_KEY",
  cname = NULL
)
}
\arguments{
\item{...}{Passed on to \code{\link[=step_build_blogdown]{step_build_blogdown()}}}

\item{deploy}{\verb{[flag]}\cr
If \code{TRUE}, deployment setup is performed
before building the blogdown site,
and the site is deployed after building it.
Set to \code{FALSE} to skip deployment.
By default (if \code{deploy} is \code{NULL}), deployment happens
if the following conditions are met:
\enumerate{
\item The repo can be pushed to (see \code{\link[=ci_can_push]{ci_can_push()}}).
\item The \code{branch} argument is \code{NULL}
(i.e., if the deployment happens to the active branch),
or the current branch is \code{master} (see \code{\link[=ci_get_branch]{ci_get_branch()}}).
}}

\item{orphan}{\verb{[flag]}\cr
Create and force-push an orphan branch consisting of only one commit?
This can be useful e.g. for \verb{path = "docs", branch = "gh-pages"},
but cannot be applied for pushing to the current branch.}

\item{checkout}{\verb{[flag]}\cr
Check out the current contents of the repository? Defaults to \code{TRUE},
set to \code{FALSE} if the build process relies on existing contents or
if you deploy to a different branch.}

\item{repos}{CRAN-like repositories to install from, defaults to
\code{\link[=repo_default]{repo_default()}}.}

\item{path}{\verb{[string]}\cr
Path to the repository, default \code{"."} which means setting up the current
repository.}

\item{branch}{\verb{[string]}\cr
Target branch, default: current branch.}

\item{remote_url}{\verb{[string]}\cr
The URL of the remote Git repository to push to, defaults to the
current GitHub repository.}

\item{commit_message}{\verb{[string]}\cr
Commit message to use, defaults to a useful message linking to the CI build
and avoiding recursive CI runs.}

\item{commit_paths}{\verb{[character]}\cr
Restrict the set of directories and/or files added to Git before deploying.
Default: deploy all files.}

\item{force}{\verb{[logical]}\cr
Add \code{--force} flag to git commands?}

\item{private_key_name}{\code{string}\cr
Only needed when deploying from builds on Travis CI or GitHub Actions.
If you have set a custom name for the private key during creation of the
SSH key pair via \code{\link[travis:use_travis_deploy]{travis::use_travis_deploy()}},
\code{\link[tic:use_ghactions_deploy]{tic::use_ghactions_deploy()}} or \code{\link[=use_tic]{use_tic()}}, pass this name here.}

\item{cname}{(\code{character(1)}\cr An optional URL for redirecting the created
website A \code{CNAME} file containing the given URL will be added to the root
of the directory specified in argument \code{path}.}
}
\description{
\code{do_blogdown()} adds default steps related to package checks
to the \code{"install"}, \code{"before_deploy"}, \code{"script"} and \code{"deploy"} stages.

\enumerate{
\item \code{\link[=step_install_deps]{step_install_deps()}} in the \code{"install"} stage, using the
\code{repos} argument.
\item \code{blogdown::install_hugo()} in the \code{"install"} stage to install the
latest version of HUGO.
\item \code{\link[=step_session_info]{step_session_info()}} in the \code{"install"} stage.
\item \code{\link[=step_setup_ssh]{step_setup_ssh()}} in the \code{"before_deploy"}
to setup the upcoming deployment (if \code{deploy} is set),
\item \code{\link[=step_setup_push_deploy]{step_setup_push_deploy()}} in the \code{"before_deploy"} stage
(if \code{deploy} is set),
\item \code{\link[=step_build_blogdown]{step_build_blogdown()}} in the \code{"deploy"} stage,
forwarding all \code{...} arguments.
\item \code{\link[=step_do_push_deploy]{step_do_push_deploy()}} in the \code{"deploy"} stage.
}

By default, the \verb{public/} directory is deployed to the \code{gh-pages} branch,
keeping the history. If the output directory of your blog/theme is not
\code{"public"} you need to change the \code{"path"} argument.
}
\examples{
\dontrun{
dsl_init()

do_blogdown()

dsl_get()
}
}
\seealso{
Other macros: 
\code{\link{do_bookdown}()},
\code{\link{do_drat}()},
\code{\link{do_package_checks}()},
\code{\link{do_pkgdown}()},
\code{\link{do_readme_rmd}()},
\code{\link{list_macros}()}
}
\concept{macros}
